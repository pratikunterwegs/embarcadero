% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_mcmc.R
\name{plot.mcmc}
\alias{plot.mcmc}
\title{Animate the MCMC draws}
\usage{
\method{plot}{mcmc}(object, inputstack, iter = 100, wait = 0.1, quiet = FALSE)
}
\arguments{
\item{object}{A BART model object generated by the dbarts package}

\item{inputstack}{An object of class RasterStack}

\item{iter}{How many of the first 1:n draws do you want to visualize?}

\item{wait}{Adds a Sys.sleep after the plots; because the plots are two-panel
they can be a little delayed sometimes, which isn't super visually smooth.
However, if you want something that's particularly crisp, I'd suggest using
the `animation` package (see below example).}

\item{quiet}{Turns off progress bars if TRUE}
}
\description{
plot.mcmc() takes your BART model and your landscape, and shows each
individual sum-of-trees model's predictions on the landscape, next to the
accumulating posterior mean. If you start with a low number of trees
(n = 5 to 20) and drop the BART burn-in (include the first few samples),
you can watch the model learn in realtime, which is often very interesting.
This can be a little slow, and you might want to adjust some of the settings
for that reason.
}
\examples{
### Setup
set.seed(42)
onelandscape <- function(x) {
  NLMR::nlm_gaussianfield(
    nrow = 150,
    ncol = 150,
    rescale = FALSE
  )
}
climate <- stack(lapply(c(1:8), onelandscape))
xnames <- c("x1", "x2", "x3", "x4", "x5", "x6", "x7", "x8")
names(climate) <- xnames

plot(climate[[1]], main = "An imaginary variable")
random.sp <- generateRandomSp(climate[[1:4]],
  # ^ These are the informative predictors
  approach = "pca",
  relations = "gaussian",
  species.prevalence = 0.5,
  realistic.sp = TRUE,
  PA.method = "threshold"
)
sp.points <- sampleOccurrences(random.sp,
  n = 250,
  type = "presence-absence",
  detection.probability = 0.9
)
occ <- SpatialPoints(sp.points$sample.points[, c("x", "y")])
occ.df <- cbind(
  sp.points$sample.points,
  raster::extract(climate, occ)
)
occ.df <- occ.df[, -c(1:3)]

### The actual example

sdm <- bart(
  y.train = occ.df[, "Observed"],
  x.train = occ.df[, xnames],
  keeptrees = TRUE
)

plot.mcmc(sdm, climate, iter = 50)

sdm <- bart(
  y.train = occ.df[, "Observed"],
  x.train = occ.df[, xnames],
  keeptrees = TRUE,
  nskip = 0,
  ntree = 10
)

plot.mcmc(sdm, climate, iter = 50)

### If you want to animate it:

library(animation)

saveGIF(plot.mcmc(sdm, climate, iter = 50),
  movie.name = "Timelapse.gif", interval = 0.15,
  ani.width = 800, ani.height = 400
)

}
